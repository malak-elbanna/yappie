name: Admin-CMS Integration Tests

on: [push, pull_request]

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v3

        -   name: Set up Python
            uses: actions/setup-python@v4
            with:
                python-version: '3.11'
        
        -   name: Install Dependencies
            run: |
                python -m pip install --upgrade pip
                pip install pytest requests
        
        -   name: Create Auth .env file
            run: |
                mkdir -p src/backend/auth-service
                cat <<EOF > src/backend/auth-service/.env
                SQLALCHEMY_DATABASE_URI=postgresql://postgres:password@db:5432/user_db
                JWT_SECRET_KEY=secret-key
                SECRET_KEY=unique-and-secret-key
                FLASK_DEBUG=True
                PORT=5000
                DB_HOST=db
                DB_PORT=5432
                ADMIN_EMAIL=admin@example.com
                ADMIN_PASSWORD=securepass
                EOF
        
        -   name: Create CMS .env file
            run: |
                mkdir -p src/backend/content-management-service
                cat <<EOF > src/backend/content-management-service/.env
                MONGO_URI=mongodb+srv://salmaayman:LgFYRUMZ3iuGPyzD@cluster0.ufjw6qu.mongodb.net/?retryWrites=true&w=majority
                SECRET_KEY=secure_secret_key
                HOST=0.0.0.0
                PORT=5001
                DEBUG=True
                EOF
        
        -   name: Start Services
            working-directory: src
            run: |
                docker compose -f docker-compose.test.yml build auth-service-2 db redis cms-service-1
                docker compose -f docker-compose.test.yml up -d auth-service-2 db redis cms-service-1
        
        -   name: Wait for Services
            run: |
                echo "Waiting for auth-service..."
                until curl --fail http://localhost:5000/health || curl --fail http://localhost:5000; do
                    echo "Auth service not ready yet, retrying in 2s..."
                    sleep 2
                done

                echo "Waiting for content-management-service..."
                until curl --fail http://localhost:5001/health; do
                    echo "content management service not ready yet, retrying in 2s..."
                    sleep 2
                done
        
        -   name: Run Tests
            working-directory: src/tests/integration
            env:
                AUTH_SERVICE_URL: http://localhost:5000
                CMS_SERVICE_URL: http://localhost:5001
            run: pytest test_admin_cms.py -v
        
        -   name: Stop containers
            if: always()
            run: cd src && docker compose -f docker-compose.test.yml down